{"HIERARCHICAL_TREE_PROMPT": "Your task is to construct a hierarchical tree using the provided text material. This material includes a main topic, subtopics, and summaries.\n\nIdentify the main topics and subtopics from the text material. These will serve as the root nodes, branches, and leaves of your tree, which are represented as \"[Topic]\". Connect these nodes with edges, which repsent as \"(Connection)\", to show the relationships between topics. You need to replace \"[Topic]\" and \"(Connection)\" with extracted topics and edges. The final nodes should contain the most specific information, which could be short sentences or keywords from the text. The depth of your tree (how many levels of topics and subtopics) will vary based on the complexity and breadth of the provided text material. Follow the specified answer format without adding explanations or deviating from the structure. Use indentation to denote hierarchy levels within the tree.\n\n### Answer Format\n```\n[Root Topic]\n  [Subtopic 1]\n    (Connection) [Sub-subtopic 1.1]\n      (Detail) [Specific Detail 1.1.1]\n      (Detail) [Specific Detail 1.1.2]\n      (Detail) [Specific Detail 1.1.3]\n    (Connection) [Sub-subtopic 1.2]\n      (Detail) [Specific Detail 1.2.1]\n  [Subtopic 2]\n    (Connection) [Sub-subtopic 2.1]\n    (Connection) [Sub-subtopic 2.2]\n      (Detail) [Specific Detail 2.2.1]\n```\n\n### Text Material\n{{TEXT}}", "JSON_TREE_PROMPT": "You need to create a JSON object based on a given tree structure. The tree represents topics and their relationships. Each topic (node) and relationship (edge) is shown in the tree. Convert this tree into a nested JSON format, where each topic becomes an object, relationships are properties, and subtopics are nested as children. Include the relationship (edge) as a property of the child object. If it does not, fill it out with null. Assign a depth level starting from 0 at the root and increasing by 1 at each level down. If a topic has no subtopics (leaf node), don't include the \"children\" attribute. Make sure to maintain the JSON structure's indentation for readability. Explanations are not allowed.\n\n### Answer Format\n```json\ndata = {\"name\": topic1, \"topicDepth\": 0, \"edge\": edge1, \"children\": [{\"name\": topic1.1, \"topicDepth\": 1, \"edge\": edge1.1, \"children\": [...]}, ...]}\n```\n\n### Tree Structure\n{{TREE}}"}